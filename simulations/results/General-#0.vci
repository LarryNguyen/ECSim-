                                                                
version 2
run General-0-20170807-23:13:47-2448
attr configname General
attr datetime 20170807-23:13:47
attr experiment General
attr inifile omnetpp.ini
attr iterationvars ""
attr iterationvarsf ""
attr measurement ""
attr network mec
attr processid 2448
attr repetition 0
attr replication #0
attr resultdir results
attr runnumber 0
attr seedset 0
param **.Core*.numUdpApps 2
param **.Core*.udpApp[*].typename "\"UDPEdgeApp\""
param **.Core*.udpApp[0].destPort 0
param **.Core*.udpApp[0].localPort 1000
param **.Core*.udpApp[0].messageLength 0B
param **.Core*.udpApp[0].sendInterval 0s
param **.Core*.udpApp[1].destAddresses "\"Enoma\""
param **.Core*.udpApp[1].destPort 1001
param **.Core*.udpApp[1].messageLength "100 bytes"
param **.Core*.udpApp[1].sendInterval 1s
param **.Edge*.numUdpApps 2
param **.Edge*.udpApp[*].typename "\"UDPEdgeApp\""
param **.Edge*.udpApp[0].destPort 0
param **.Edge*.udpApp[0].localPort 1000
param **.Edge*.udpApp[0].messageLength 0B
param **.Edge*.udpApp[0].sendInterval 0s
param **.Edge*.udpApp[1].destAddresses "\"Enoma\""
param **.Edge*.udpApp[1].destPort 1001
param **.Edge*.udpApp[1].messageLength "100 bytes"
param **.Edge*.udpApp[1].sendInterval 1s
param **.Enoma.numUdpApps 1
param **.Enoma.udpApp[*].typename "\"UDPEdgeApp\""
param **.Enoma.udpApp[0].destPort 0
param **.Enoma.udpApp[0].isEnoma 1
param **.Enoma.udpApp[0].localPort 1001
param **.Enoma.udpApp[0].messageLength 0B
param **.Enoma.udpApp[0].sendInterval 0s
param **.RG*.numUdpApps 2
param **.RG*.udpApp[*].typename "\"UDPEdgeApp\""
param **.RG*.udpApp[0].destPort 0
param **.RG*.udpApp[0].localPort 1000
param **.RG*.udpApp[0].messageLength 0B
param **.RG*.udpApp[0].sendInterval 0s
param **.RG*.udpApp[1].destAddresses "\"Enoma\""
param **.RG*.udpApp[1].destPort 1001
param **.RG*.udpApp[1].messageLength "100 bytes"
param **.RG*.udpApp[1].sendInterval 1s
param **.SP1.numUdpApps 1
param **.SP1.udpApp[*].typename "\"UDPSink\""
param **.SP1.udpApp[0].localPort 1000
param **.SP2.numUdpApps 1
param **.SP2.udpApp[*].typename "\"UDPSink\""
param **.SP2.udpApp[0].localPort 1000
param **.ap.wlan[*].mac.address "\"10:00:00:00:00:00\""
param **.arp.cacheTimeout 1s
param **.autoConfigurator.interfaces "\"wlan0\""
param **.constraintAreaMaxX 600m
param **.constraintAreaMaxY 400m
param **.constraintAreaMaxZ 0m
param **.constraintAreaMinX 0m
param **.constraintAreaMinY 0m
param **.constraintAreaMinZ 0m
param **.mac.address "\"auto\""
param **.mac.maxQueueSize 14
param **.mac.rtsThresholdBytes 3000B
param **.mgmt.frameCapacity 10
param **.ue.**.mgmt.accessPointAddress "\"10:00:00:00:00:00\""
param **.ue.numUdpApps 1
param **.ue.udpApp[*].typename "\"UDPEdgeApp\""
param **.ue.udpApp[0].destAddresses "\"SP2\""
param **.ue.udpApp[0].destPort 1000
param **.ue.udpApp[0].messageLength "1300 bytes"
param **.ue.udpApp[0].sendInterval exponential(0.001s)
param **.wlan*.bitrate 2Mbps
param **.wlan[*].mac.cwMinBroadcast 31
param **.wlan[*].mac.cwMinData 7
param **.wlan[*].mac.retryLimit 7
param **.wlan[*].radio.receiver.sensitivity -85dBm
param **.wlan[*].radio.receiver.snirThreshold 4dB
param **.wlan[*].radio.transmitter.bandwidth 2MHz
param **.wlan[*].radio.transmitter.bitrate 2Mbps
param **.wlan[*].radio.transmitter.carrierFrequency 2.4GHz
param **.wlan[*].radio.transmitter.headerBitLength 100b
param **.wlan[*].radio.transmitter.power 2mW
param *.ap*.**.mgmtType "\"Ieee80211MgmtAPSimplified\""
param *.ap.wlan[0].radio.channelNumber 0
param *.mobile*.**.mgmtType "\"Ieee80211MgmtSTASimplified\""
param *.ue.wlan[0].radio.channelNumber 0

vector 372  mec.ue.udpApp[0]  sentPk:vector(packetBytes)  ETV
attr interpolationmode  none
attr source  sentPk
attr title  "packets sent, vector(packetBytes)"
vector 375  mec.ue.udp  sentPk:vector(packetBytes)  ETV
attr interpolationmode  none
attr source  sentPk
attr title  "packets sent, vector(packetBytes)"
vector 353  mec.ue.networkLayer.arp  sentReq:vector  ETV
attr title  "ARP request sent, vector"
vector 367  mec.ue.eth[0].encap  encapPk:vector(packetBytes)  ETV
attr interpolationmode  none
attr source  encapPk
attr title  "packets encapsulated, vector(packetBytes)"
vector 363  mec.ue.eth[0].mac  rxPkFromHL:vector(packetBytes)  ETV
attr interpolationmode  none
attr source  rxPkFromHL
attr title  "packet bytes from higher layer, vector(packetBytes)"
vector 358  mec.ue.eth[0].mac  txPk:vector(packetBytes)  ETV
attr interpolationmode  none
attr source  txPk
attr title  "packets transmitted, vector(packetBytes)"
vector 18  mec.Edge1.eth[1].mac  rxPkOk:vector(packetBytes)  ETV
attr interpolationmode  none
attr source  rxPkOk
attr title  "packets received OK, vector(packetBytes)"
vector 19  mec.Edge1.eth[1].mac  passedUpPk:vector(packetBytes)  ETV
attr interpolationmode  none
attr source  packetSentToUpper
attr title  "packets passed to higher layer, vector(packetBytes)"
vector 27  mec.Edge1.eth[1].encap  decapPk:vector(packetBytes)  ETV
attr interpolationmode  none
attr source  decapPk
attr title  "packets decapsulated, vector(packetBytes)"
vector 1  mec.Edge1.networkLayer.arp  sentReply:vector  ETV
attr title  "ARP replies sent, vector"
vector 26  mec.Edge1.eth[1].encap  encapPk:vector(packetBytes)  ETV
attr interpolationmode  none
attr source  encapPk
attr title  "packets encapsulated, vector(packetBytes)"
vector 22  mec.Edge1.eth[1].mac  rxPkFromHL:vector(packetBytes)  ETV
attr interpolationmode  none
attr source  rxPkFromHL
attr title  "packet bytes from higher layer, vector(packetBytes)"
vector 17  mec.Edge1.eth[1].mac  txPk:vector(packetBytes)  ETV
attr interpolationmode  none
attr source  txPk
attr title  "packets transmitted, vector(packetBytes)"
vector 359  mec.ue.eth[0].mac  rxPkOk:vector(packetBytes)  ETV
attr interpolationmode  none
attr source  rxPkOk
attr title  "packets received OK, vector(packetBytes)"
vector 360  mec.ue.eth[0].mac  passedUpPk:vector(packetBytes)  ETV
attr interpolationmode  none
attr source  packetSentToUpper
attr title  "packets passed to higher layer, vector(packetBytes)"
vector 368  mec.ue.eth[0].encap  decapPk:vector(packetBytes)  ETV
attr interpolationmode  none
attr source  decapPk
attr title  "packets decapsulated, vector(packetBytes)"
vector 0  mec.Edge1.networkLayer.arp  sentReq:vector  ETV
attr title  "ARP request sent, vector"
vector 14  mec.Edge1.eth[0].encap  encapPk:vector(packetBytes)  ETV
attr interpolationmode  none
attr source  encapPk
attr title  "packets encapsulated, vector(packetBytes)"
vector 10  mec.Edge1.eth[0].mac  rxPkFromHL:vector(packetBytes)  ETV
attr interpolationmode  none
attr source  rxPkFromHL
attr title  "packet bytes from higher layer, vector(packetBytes)"
vector 5  mec.Edge1.eth[0].mac  txPk:vector(packetBytes)  ETV
attr interpolationmode  none
attr source  txPk
attr title  "packets transmitted, vector(packetBytes)"
vector 103  mec.RG1.eth[0].mac  rxPkOk:vector(packetBytes)  ETV
attr interpolationmode  none
attr source  rxPkOk
attr title  "packets received OK, vector(packetBytes)"
vector 104  mec.RG1.eth[0].mac  passedUpPk:vector(packetBytes)  ETV
attr interpolationmode  none
attr source  packetSentToUpper
attr title  "packets passed to higher layer, vector(packetBytes)"
vector 112  mec.RG1.eth[0].encap  decapPk:vector(packetBytes)  ETV
attr interpolationmode  none
attr source  decapPk
attr title  "packets decapsulated, vector(packetBytes)"
vector 98  mec.RG1.networkLayer.arp  sentReply:vector  ETV
attr title  "ARP replies sent, vector"
vector 111  mec.RG1.eth[0].encap  encapPk:vector(packetBytes)  ETV
attr interpolationmode  none
attr source  encapPk
attr title  "packets encapsulated, vector(packetBytes)"
vector 107  mec.RG1.eth[0].mac  rxPkFromHL:vector(packetBytes)  ETV
attr interpolationmode  none
attr source  rxPkFromHL
attr title  "packet bytes from higher layer, vector(packetBytes)"
vector 102  mec.RG1.eth[0].mac  txPk:vector(packetBytes)  ETV
attr interpolationmode  none
attr source  txPk
attr title  "packets transmitted, vector(packetBytes)"
vector 6  mec.Edge1.eth[0].mac  rxPkOk:vector(packetBytes)  ETV
attr interpolationmode  none
attr source  rxPkOk
attr title  "packets received OK, vector(packetBytes)"
vector 7  mec.Edge1.eth[0].mac  passedUpPk:vector(packetBytes)  ETV
attr interpolationmode  none
attr source  packetSentToUpper
attr title  "packets passed to higher layer, vector(packetBytes)"
vector 15  mec.Edge1.eth[0].encap  decapPk:vector(packetBytes)  ETV
attr interpolationmode  none
attr source  decapPk
attr title  "packets decapsulated, vector(packetBytes)"
vector 161  mec.RG1.udpE  rcvdPk:vector(packetBytes)  ETV
attr interpolationmode  none
attr source  rcvdPk
attr title  "packets received, vector(packetBytes)"
vector 162  mec.RG1.udpE  passedUpPk:vector(count)  ETV
attr interpolationmode  none
attr title  "packets passed up, vector(count)"
vector 150  mec.RG1.udpApp[0]  rcvdPk:vector(packetBytes)  ETV
attr interpolationmode  none
attr source  rcvdPk
attr title  "packets received, vector(packetBytes)"
vector 153  mec.RG1.udpApp[0]  rcvdPkLifetime:vector  ETV
attr interpolationmode  none
attr source  messageAge(rcvdPk)
attr title  "received packet lifetime, vector"
attr unit  s
vector 154  mec.RG1.udpApp[0]  rcvdPkSeqNo:vector  ETV
attr interpolationmode  none
attr source  appPkSeqNo(rcvdPk)
attr title  "received packet sequence number, vector"
